x-api-config: &api-config
    build: ./    
    expose:
      - "8080"
    depends_on:
      - postgres
      - rabbitmq
      - redis
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/order_db
      SPRING_DATASOURCE_USERNAME: order_user
      SPRING_DATASOURCE_PASSWORD: order_password
      RBHOST: rabbitmq      
      RBPORT: 5672      
      REDIS_HOST: redis
      REDIS_PORT: 6379
    logging:
      driver: json-file
services:
  nginx:
    image: nginx:alpine
    container_name: order-service-nginx
    ports:
      - "8080:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api-1
      - api-2
  api-1:
    <<: *api-config
    container_name: order-service-api1
  api-2:
    <<: *api-config
    container_name: order-service-api2    
  postgres:
    image: postgres:15
    container_name: order-service-db
    restart: always
    environment:
      POSTGRES_USER: order_user
      POSTGRES_PASSWORD: order_password
      POSTGRES_DB: order_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
  rabbitmq:
    image: rabbitmq:3-management
    container_name: order-service-rabbitmq
    restart: always
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      - "15666:15672" # UI Web do RabbitMQ      
      - "5673:5672"
  
  redis:
    image: redis:7
    container_name: order-service-redis
    restart: always
    ports:
      - "6379:6379"

  prometheus:
    image: prom/prometheus:latest
    container_name: order-service-prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
    ports:
      - "9090:9090"

  grafana:
    image: grafana/grafana:latest
    container_name: order-service-grafana
    ports:
      - "3000:3000"
    restart: always
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    depends_on:
      - prometheus

  loki:
    image: grafana/loki:2.9.2
    container_name: order-service-loki
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml

  promtail:
    image: grafana/promtail:2.9.2
    container_name: order-service-promtail
    volumes:
      - /var/log:/var/log
      - ./promtail-config.yml:/etc/promtail/promtail.yaml
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock
    command: -config.file=/etc/promtail/promtail.yaml
  jaeger:
    image: jaegertracing/all-in-one:1.52
    ports:
      - "16686:16686"   # UI Web
      - "14250:14250"   # gRPC (OTLP)
      - "6831:6831/udp" # Agent UDP

volumes:
  postgres_data:
